image:
  - Visual Studio 2017

#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

version: '{branch}.{build}'
clone_depth: 1

environment:
    # Tell msys2 to add mingw64 to the path
    MSYSTEM: MINGW64
    # Tell msys2 to inherit the current directory when starting the shell
    CHERE_INVOKING: 1

install:
    # Download libiio
    - cd c:\
    - appveyor DownloadFile https://ci.appveyor.com/api/projects/analogdevicesinc/libiio/artifacts/libiio.zip?branch=master
    - 7z x libiio*.zip > nul
    - mkdir libiio-win64
    - mkdir libiio-win32
    - mkdir libiio-mingw-win64
    - mkdir libiio-mingw-win32
    - mv libiio-*/MS64/* libiio-win64/
    - cp libiio-*/include/* libiio-win64/
    - mv libiio-*/MS32/* libiio-win32/
    - cp libiio-*/include/* libiio-win32/
    - mv libiio-*/MinGW32/* libiio-mingw-win32/
    - cp libiio-*/include/* libiio-mingw-win32/
    - mv libiio-*/MinGW64/* libiio-mingw-win64/
    - cp libiio-*/include/* libiio-mingw-win64/
    
    # Download SWIG
    - cd c:\
    - appveyor DownloadFile https://sourceforge.net/projects/swig/files/swigwin/swigwin-4.0.0/swigwin-4.0.0.zip
    - 7z x swigwin-4.0.0.zip -oswig
    - cd swig/swigwin-4.0.0
    - xcopy * .. /s /e /h /Q

    #Install Inno Setup
    - choco install InnoSetup
    - set PATH=%PATH%;"C:\Program Files (x86)\Inno Setup 5"

build_script:
    - set MCS_EXECUTABLE_PATH="C:\Windows\Microsoft.NET\Framework\v4.0.30319"
    # 32-bit build - VS
    - set PATH=C:\Python37;C:\Python37\libs;%PATH%
    - mkdir c:\projects\libm2k\build-win32
    - cd c:\projects\libm2k\build-win32
    - cmake -G "Visual Studio 15" \
        -DIIO_LIBRARIES:FILEPATH=C:/libiio-win32/libiio.lib \
        -DIIO_INCLUDE_DIRS:PATH=C:/libiio-win32 \
        -DCMAKE_CONFIGURATION_TYPES=RELEASE \
        -DSWIG_DIR=C:/swig/Lib \
        -DSWIG_EXECUTABLE=C:/swig/swig.exe \
        -DSWIG_VERSION="4.0.0" \
        -DENABLE_TOOLS=ON \
        -DPython_EXECUTABLE=C:\Python37\python.exe \
        ..
    - cmake --build . --config Release
    
    - python.exe -m pip install --user --upgrade setuptools wheel
    - python.exe setup.py bdist_wininst
    - python.exe setup.py sdist bdist_wheel --plat-name win32
    - ps: Get-ChildItem dist\libm2k-*.exe | Rename-Item -NewName "libm2k-py37-win32.exe"

    # 64-bit build - VS
    - set PATH=C:\Python37-x64;C:\Python37-x64\libs;%PATH%
    - mkdir c:\projects\libm2k\build-win64
    - cd c:\projects\libm2k\build-win64
    - cmake -G "Visual Studio 15 Win64" \
        -DIIO_LIBRARIES:FILEPATH=C:/libiio-win64/libiio.lib \
        -DIIO_INCLUDE_DIRS:PATH=C:/libiio-win64 \
        -DCMAKE_CONFIGURATION_TYPES=RELEASE \
        -DSWIG_DIR=C:/swig/Lib \
        -DSWIG_EXECUTABLE=C:/swig/swig.exe \
        -DSWIG_VERSION="4.0.0" \
        -DENABLE_TOOLS=ON \
        -DPython_EXECUTABLE=C:\Python37-x64\python.exe \
        ..
    - cmake --build . --config Release

    - python.exe -m pip install --user --upgrade setuptools wheel
    - python.exe setup.py bdist_wininst
    - python.exe setup.py sdist bdist_wheel --plat-name win_amd64
    - ps: Get-ChildItem dist\libm2k-*.exe | Rename-Item -NewName "libm2k-py37-amd64.exe"
        
    #Create the installer
    - copy "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\14.16.27012\x86\Microsoft.VC141.CRT\msvcp140.dll" c:\projects\libm2k\build-win32
    - copy "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\14.16.27012\x64\Microsoft.VC141.CRT\msvcp140.dll" c:\projects\libm2k\build-win64
    - ISCC c:\projects\libm2k\build-win64\libm2k.iss
    - appveyor PushArtifact C:\libm2k-system-setup.exe

    # Create ZIPs
    - cd c:\projects\libm2k
    
    - mkdir c:\libm2k-win32
    - mkdir c:\libm2k-win32\dist
    - xcopy include c:\libm2k-win32 /s /e /h
    - copy build-win32\libm2k.* c:\libm2k-win32\
    - copy build-win32\_libm2k.* c:\libm2k-win32\
    - copy build-win32\libm2k-sharp.dll c:\libm2k-win32\
    - copy build-win32\libm2k-sharp-cxx-wrap.dll c:\libm2k-win32\
    - copy build-win32\*.exe c:\libm2k-win32\
    - copy build-win32\dist\*.exe c:\libm2k-win32\dist\
    - copy build-win32\dist\*.whl c:\libm2k-win32\dist\
    - copy c:\libiio-win32\*.dll c:\libm2k-win32\
    #- $Fullname = Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\*\x86" -Filter msvcp140.dll -Recurse |  %{echo $_.FullName}
    - copy "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\14.16.27012\x86\Microsoft.VC141.CRT\msvcp140.dll" c:\libm2k-win32\
    - 7z a "c:\libm2k-win32.zip" c:\libm2k-win32
    - ps: Get-ChildItem c:\libm2k-win32\dist\*.whl | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
    - appveyor PushArtifact c:\libm2k-win32.zip

    - mkdir c:\libm2k-win64
    - mkdir c:\libm2k-win64\dist
    - xcopy include c:\libm2k-win64 /s /e /h
    - copy build-win64\libm2k.* c:\libm2k-win64\
    - copy build-win64\_libm2k.* c:\libm2k-win64\
    - copy build-win64\libm2k-sharp.dll c:\libm2k-win64\
    - copy build-win64\libm2k-sharp-cxx-wrap.dll c:\libm2k-win64\
    - copy build-win64\*.exe c:\libm2k-win64\
    - copy build-win64\dist\*.exe c:\libm2k-win64\dist\
    - copy build-win64\dist\*.whl c:\libm2k-win64\dist\
    - copy c:\libiio-win64\*.dll c:\libm2k-win64\
    #- $Fullname = Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\*\x64" -Filter msvcp140.dll -Recurse |  %{echo $_.FullName}
    - copy "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Redist\MSVC\14.16.27012\x64\Microsoft.VC141.CRT\msvcp140.dll" c:\libm2k-win64\
    - 7z a "c:\libm2k-win64.zip" c:\libm2k-win64
    - ps: Get-ChildItem c:\libm2k-win64\dist\*.whl | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
    - appveyor PushArtifact c:\libm2k-win64.zip

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
