#!/bin/bash -e

WORKDIR=$(pwd)

set -ex

install_deps() {
	echo "# Installing dependencies" 

	# Update package lists
	sudo apt-get -qq update

	install_packages() {
		local packages=("$@")
		sudo DEBIAN_FRONTEND=noninteractive apt-get install -y "${packages[@]}"
	}

	libm2k_packages=(
		bison
		bzip2
		cmake
		curl
		debhelper
		devscripts
		dh-python
		doxygen
		fakeroot
		flex
		git
		graphviz
		gzip
		libaio-dev
		libavahi-client-dev
		libavahi-common-dev
		libserialport-dev
		libunwind-dev
		libunwind8
		libusb-1.0-0-dev
		libxml2-dev
		python3-all
		python3-dev
		python3-pip
		python3-setuptools
		rpm
		swig
		tar
	)

	libiio_packages=(
		bison
		cmake
		flex
		libaio-dev
		libavahi-client-dev
		libcdk5-dev
		libserialport-dev
		libusb-1.0-0-dev
		libxml2-dev
		man2html
		python3-sphinx
	)

	echo "## Installing libm2k dependencies"
	install_packages "${libm2k_packages[@]}"

	echo "## Installing libiio dependencies"
	install_packages "${libiio_packages[@]}"
}

build_glog() {
    echo "### Building glog - version $GLOG_VERSION"
    git clone https://github.com/google/glog --branch "$GLOG_VERSION" --depth 1 "${WORKDIR}"/glog
	
	cd "${WORKDIR}"/glog
	mkdir -p build_"${GLOG_VERSION}" && cd build_"${GLOG_VERSION}"
	cmake "${WORKDIR}"/glog \
		-DCMAKE_PREFIX_PATH=/usr
	make
	sudo make install
	sudo pip3 install --upgrade pip stdeb argparse
}

build_libiio() {
	echo "### Building libiio - version $LIBIIO_VERSION"
	git clone https://github.com/analogdevicesinc/libiio.git --branch $LIBIIO_VERSION "${WORKDIR}"/libiio

    cd "${WORKDIR}"/libiio
    mkdir -p build && cd build
    cmake "${WORKDIR}"/libiio \
		-Werror=dev \
		-DCOMPILE_WARNING_AS_ERROR=ON \
		-DCPACK_SYSTEM_NAME=${ARTIFACTNAME} \
		-DENABLE_PACKAGING=ON \
		-DPYTHON_BINDINGS=ON \
        -DPYTHON_EXECUTABLE:FILEPATH=$(python -c "import os, sys; print(os.path.dirname(sys.executable) + '/python')") \
		-DWITH_DOC=ON \
		-DWITH_MAN=ON \
		-DWITH_SERIAL_BACKEND=ON
	make
	make package 
	sudo apt install ./libiio-*.deb
}

handle_default() {
	install_deps
	build_glog
	build_libiio
}

handle_ubuntu_docker() {
	handle_default
}

handle_doxygen() {
	# Install a recent version of doxygen
	DOXYGEN_URL="wget https://sourceforge.net/projects/doxygen/files/rel-1.8.15/doxygen-1.8.15.src.tar.gz"
	cd ${DEPS_DIR}
	[ -d "doxygen" ] || {
		mkdir doxygen && wget --quiet -O - ${DOXYGEN_URL} | tar --strip-components=1 -xz -C doxygen
	}
	cd doxygen
	mkdir -p build && cd build
	cmake ..
	make -j${NUM_JOBS}
	sudo make install
	cd ..
	cd ..

	cd ${WORKDIR}/doc
	mkdir -p build && cd build
	cmake ..
	cd ..
	cd ..

	handle_default
	cd ${WORKDIR}
	#Also install Sphinx for Python bindings
	sudo apt-get install python3-sphinx
	sudo pip3 install --upgrade sphinx_rtd_theme
}

handle_${OS_TYPE}
