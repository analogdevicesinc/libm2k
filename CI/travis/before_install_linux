#!/bin/sh -xe

. CI/travis/lib.sh

get_libiio_release() {
	git clone https://github.com/analogdevicesinc/libiio && cd libiio
	IIO_TAG=`git describe --tags $(git rev-list --tags --max-count=1)`
	git checkout ${IIO_TAG}
	IIO_TAG_SHA=${IIO_TAG}.g`git rev-parse --short HEAD`
	wget https://github.com/analogdevicesinc/libiio/releases/download/${IIO_TAG}/libiio-${IIO_TAG_SHA}${LDIST}.deb
}

handle_centos() {
	# FIXME: see about adding `libserialport-dev` from EPEL ; maybe libusb-1.0.0-devel...
	yum -y groupinstall 'Development Tools'
	yum -y install cmake libxml2-devel libusb1-devel doxygen libaio-devel \
		avahi-devel bzip2 gzip rpm rpm-build 

	get_libiio_release
	sudo yum localinstall -y ./libiio-*${LDIST}.rpm
}

handle_centos_docker() {
	prepare_docker_image "centos:centos${OS_VERSION}"
}

handle_ubuntu_docker() {
	prepare_docker_image "ubuntu:${OS_VERSION}"
}

handle_default() {
	sudo apt-get -qq update
	sudo apt-get install -y cmake doxygen graphviz libaio-dev libavahi-client-dev libavahi-common-dev libusb-1.0-0-dev libxml2-dev rpm tar bzip2 gzip flex bison git curl python3-dev python3-setuptools python3-pip python3-all debhelper devscripts fakeroot
	if [ `sudo apt-cache search libserialport-dev | wc -l` -gt 0 ] ; then
		sudo apt-get install -y libserialport-dev
	fi

	get_libiio_release
	sudo dpkg -i ./libiio-*${LDIST}.deb

	#Install glog
  cd ${TRAVIS_BUILD_DIR}
  git clone --branch v0.3.5 --depth 1 https://github.com/google/glog
  mkdir -p glog/build && cd glog/build
  cmake ..
  make
  sudo make install

	#Install SWIG 4.0
  cd ${TRAVIS_BUILD_DIR}
	wget https://downloads.sourceforge.net/swig/swig-4.0.1.tar.gz
	tar -xzvf ./swig-4.0.1.tar.gz
	cd swig-4.0.1
	./configure --prefix=/usr
	make && sudo make install

	sudo pip3 install --upgrade pip stdeb argparse
}

handle_doxygen() {
	# Install a recent version of doxygen
	DOXYGEN_URL="wget https://sourceforge.net/projects/doxygen/files/rel-1.8.15/doxygen-1.8.15.src.tar.gz"
	cd ${DEPS_DIR}
	[ -d "doxygen" ] || {
		mkdir doxygen && wget --quiet -O - ${DOXYGEN_URL} | tar --strip-components=1 -xz -C doxygen
	}
	cd doxygen
	mkdir -p build && cd build
	cmake ..
	make -j${NUM_JOBS}
	sudo make install
	cd ..
	cd ..

	cd ${TRAVIS_BUILD_DIR}/doc
	mkdir -p build && cd build
	cmake ..
	cd ..
	cd ..

	handle_default
	cd ${TRAVIS_BUILD_DIR}
	#Also install Sphinx for Python bindings
	sudo apt-get install python3-sphinx
	sudo pip3 install --upgrade sphinx_rtd_theme
}

OS_TYPE=${1:-default}
OS_VERSION=${2}

handle_${OS_TYPE}

