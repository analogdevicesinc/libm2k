#define MsvcLib "msvcp140.dll"
#define MsvcRuntime "vcruntime140.dll"

[Setup]
AppId={{0B97BC46-2BA1-4931-88F2-61E84FC7EFEF}
AppName="libm2k"
AppVersion="@PROJECT_VERSION@"
AppPublisher="Analog Devices, Inc."
AppPublisherURL="http://www.analog.com"
AppSupportURL="http://www.analog.com"
AppUpdatesURL="http://www.analog.com"
AppCopyright="Copyright 2019 ADI and other contributors"
CreateAppDir=no
LicenseFile="D:\a\1\s\LICENSE"
OutputBaseFilename=libm2k-system-setup
OutputDir="C:\"
Compression=lzma
SolidCompression=yes
ArchitecturesInstallIn64BitMode=x64


[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "brazilianportuguese"; MessagesFile: "compiler:Languages\BrazilianPortuguese.isl"
Name: "catalan"; MessagesFile: "compiler:Languages\Catalan.isl"
Name: "corsican"; MessagesFile: "compiler:Languages\Corsican.isl"
Name: "czech"; MessagesFile: "compiler:Languages\Czech.isl"
Name: "danish"; MessagesFile: "compiler:Languages\Danish.isl"
Name: "dutch"; MessagesFile: "compiler:Languages\Dutch.isl"
Name: "finnish"; MessagesFile: "compiler:Languages\Finnish.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"
Name: "hebrew"; MessagesFile: "compiler:Languages\Hebrew.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"
Name: "japanese"; MessagesFile: "compiler:Languages\Japanese.isl"
Name: "norwegian"; MessagesFile: "compiler:Languages\Norwegian.isl"
Name: "polish"; MessagesFile: "compiler:Languages\Polish.isl"
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "slovenian"; MessagesFile: "compiler:Languages\Slovenian.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
Name: "turkish"; MessagesFile: "compiler:Languages\Turkish.isl"
Name: "ukrainian"; MessagesFile: "compiler:Languages\Ukrainian.isl"

[Code]  
function isIioInstalled(): Boolean;
begin
  Result := True;

  if not FileExists(ExpandConstant('{sys}\libiio.dll')) then begin
    Result := False;
  end;
 
  if not FileExists(ExpandConstant('{sys}\libusb-1.0.dll')) then begin
    Result := False;
  end;
 
   if not FileExists(ExpandConstant('{sys}\libxml2.dll')) then begin
    Result := False;
  end;
 end;

function isMsvcInstalled(): Boolean;
begin
  Result := True;

  if not FileExists(ExpandConstant('{sys}\{#MsvcLib}')) then begin
    Result := False;
  end;
 end;
 
[Files]
;Source: "C:\projects\libm2k\build-win32\libm2k.dll"; DestDir: "{sys}"; Flags: 32bit replacesameversion
Source: "D:\a\1\libm2k-win64\libm2k.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Flags: replacesameversion

;Source: "C:\projects\libm2k\build-win32\{#MsvcLib}"; DestDir: "{sys}"; Check: not isMsvcInstalled; Flags: onlyifdoesntexist 32bit
Source: "D:\a\1\libm2k-win64\{#MsvcLib}"; DestDir: "{sys}"; Check: Is64BitInstallMode and (not isMsvcInstalled); Flags: onlyifdoesntexist

;Source: "C:\projects\libm2k\build-win32\{#MsvcRuntime}"; DestDir: "{sys}"; Check: not isMsvcInstalled; Flags: onlyifdoesntexist 32bit
Source: "D:\a\1\libm2k-win64\{#MsvcRuntime}"; DestDir: "{sys}"; Check: Is64BitInstallMode and (not isMsvcInstalled); Flags: onlyifdoesntexist

;Source: "C:\projects\libm2k\build-win32\*.exe"; DestDir: "{sys}"; Check: not Is64BitInstallMode
;Source: "D:\a\1\libm2k-win64\*.exe"; DestDir: "{sys}"; Check: Is64BitInstallMode

;Source: "C:\projects\libm2k\build-win32\m2kcli.exe"; DestDir: "{sys}"; Check: not Is64BitInstallMode;
Source: "D:\a\1\libm2k-win64\m2kcli.exe"; DestDir: "{sys}"; Check: Is64BitInstallMode;

;Source: "C:\projects\libm2k\build-win32\libm2k.lib"; DestDir: "{pf32}\Microsoft Visual Studio 15.0\VC\lib"; Check: not Is64BitInstallMode
Source: "D:\a\1\libm2k-win64\libm2k.lib"; DestDir: "{pf32}\Microsoft Visual Studio 15.0\VC\lib\amd64"; Check: Is64BitInstallMode
Source: "D:\a\1\libm2k-win64\libm2k\*"; DestDir: "{pf32}\Microsoft Visual Studio 15.0\VC\include"; Flags: replacesameversion recursesubdirs

;Source: "C:\libiio-win32\libiio.dll"; DestDir: "{sys}"; Tasks: install_libiio_force install_libiio; Flags: 32bit replacesameversion
Source: "D:\a\1\libiio-x64\libiio.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Tasks: install_libiio_force install_libiio; Flags: replacesameversion

;Source: "C:\libiio-win32\libxml2.dll"; DestDir: "{sys}"; Tasks: install_libiio_force install_libiio; Flags: 32bit
Source: "D:\a\1\libiio-x64\libxml2.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Tasks: install_libiio_force install_libiio;

;Source: "C:\libiio-win32\libusb-1.0.dll"; DestDir: "{sys}"; Tasks: install_libiio_force install_libiio; Flags: 32bit
Source: "D:\a\1\\libiio-x64\libusb-1.0.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Tasks: install_libiio_force install_libiio;

;Source: "C:\libiio-win32\libserialport-0.dll"; DestDir: "{sys}"; Tasks: install_libiio_force install_libiio; Flags: 32bit
Source: "D:\a\1\libiio-x64\libserialport-0.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Tasks: install_libiio_force install_libiio;

;Source: "C:\glog\build_0_4_0-Win32\Release\glog.dll"; DestDir: "{sys}"; Tasks: install_glog; Flags: 32bit
Source: "D:\a\1\deps\glog\build_0_4_0-x64\Release\glog.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Tasks: install_glog;

;Source: "C:\projects\libm2k\build-win32\libm2k-sharp.dll"; DestDir: "{cf}\libm2k"; Check: not Is64BitInstallMode; Flags: replacesameversion
;Source: "C:\projects\libm2k\build-win32\libm2k-sharp-cxx-wrap.dll"; DestDir: "{sys}"; Check: not Is64BitInstallMode; Flags: replacesameversion

Source: "D:\a\1\libm2k-win64\libm2k-sharp.dll"; DestDir: "{cf}\libm2k"; Check: Is64BitInstallMode; Flags: replacesameversion
Source: "D:\a\1\libm2k-win64\libm2k-sharp-cxx-wrap.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Flags: replacesameversion

;Source: "C:\projects\libm2k\build-win32\libm2k_lv.dll"; DestDir: "{sys}"; Flags: 32bit replacesameversion; Tasks: install_labview_wrapper;
Source: "D:\a\1\libm2k-win64\libm2k_lv.dll"; DestDir: "{sys}"; Check: Is64BitInstallMode; Flags: replacesameversion; Tasks: install_labview_wrapper;

[Tasks]
Name: "install_libiio"; 						Description: "Install libiio"; 	Check: Not isIioInstalled;
Name: "install_libiio_force"; 					Description: "Overwrite libiio ( libiio is already installed in your system. Overwrite? )"; Check: isIioInstalled;
Name: "install_labview_wrapper";  					Description: "Install wrapper for LabVIEW bindings";
Name: "install_glog"; 						Description: "Install with logging support";
